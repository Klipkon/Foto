---
import { Image } from "astro:assets";
import Title from "./Title.astro";
import Description from "./Description.astro";
import type { Image as IImage, Button as IButton } from "@/interfaces/page";
import { cn } from "@/lib/utils";
import { Button } from "@/components/ui/button";

interface Props {
  title: string;
  description: string;
  image: IImage;
  reversed: boolean;
  id: number;
  featured: boolean;
  button?: IButton;
}

const { title, description, image, reversed, id, featured, button } =
  Astro.props;
---

<div
  id={"sectionWithImage" + id}
  class={cn(
    featured ? "bg-secondary rounded-xl shadow-accent" : "",
    "flex flex-col lg:flex-row items-center justify-between gap-12 lg:gap-24 py-48 sectionWithImage p-12"
  )}
>
  <Image
    alt={image.data.attributes.alternativeText}
    class={cn(
      featured ? "" : "shadow-green",
      reversed ? "md:order-first" : "md:order-last",
      "rounded-lg w-full lg:w-[420px] lg:max-w-none object-cover"
    )}
    src={import.meta.env.STRAPI_URL + image.data.attributes.url}
    width={image.data.attributes.width}
    height={image.data.attributes.height}
  />
  <div class="flex flex-col gap-8 text items-center lg:items-start">
    <Title className="text-center lg:text-left title">{title}</Title>
    <Description className="text-center lg:text-left desc"
      >{description}</Description
    >
    {
      button ? (
        <Button key={button.id} size={button.size} variant={button.variant}>
          {button.content}
        </Button>
      ) : null
    }
  </div>
</div>

<script>
  import gsap from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  import { isMobile } from "@/lib/utils.ts";

  gsap.registerPlugin(ScrollTrigger);

  if (!isMobile()) {
    let tl = gsap.timeline({
      scrollTrigger: {
        trigger: ".sectionWithImage",
        start: "top center",
        end: "top center",
      },
    });

    tl.from(".sectionWithImage .image", { y: "20%", opacity: 0 })
      .to(".sectionWithImage .image", {
        y: 0,
        opacity: 1,
        duration: 0.1,
        ease: "power4.in",
      })
      .from(".sectionWithImage .text .title", { y: "20%", opacity: 0 }, 0.2)
      .to(".sectionWithImage .text .title", {
        y: 0,
        opacity: 1,
        duration: 0.1,
        ease: "power4.in",
      })
      .from(".sectionWithImage .text .desc", { y: "20%", opacity: 0 }, 0.3)
      .to(".sectionWithImage .text .desc", {
        y: 0,
        opacity: 1,
        duration: 0.1,
        ease: "power4.in",
      });
  }
</script>
