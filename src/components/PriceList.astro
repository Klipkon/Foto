---
import Title from "./Title.astro";
import DOMPurify from "isomorphic-dompurify";
import type { Card as ICard } from "@/interfaces/page";
import {
  Card,
  CardContent,
  CardDescription,
  CardTitle,
} from "@/components/ui/card";

interface Props {
  title: string;
  table: string;
  options?: ICard[];
}

const { title, table, options } = Astro.props;
---

<price-list>
  <div class="py-12">
    <div class="flex flex-col items-start justify-center pb-4 priceList">
      <div
        class="flex flex-col items-center justify-center w-full py-5 border-b-1 border-black"
      >
        <Title>{title}</Title>
      </div>
      <div
        set:html={DOMPurify.sanitize(table)}
        class="flex flex-col items-start justify-center w-full [&>figure]:w-full [&>figure>table]:w-full py-5 gap-5 [&>p]:w-full"
      />
    </div>
    {
      options?.length != 0 ? (
        <div class="flex flex-col items-center justify-center gap-12 additionalOptions alphanone">
          <div class="flex items-stretc justify-center w-full">
            <Title className="sm:text-[32px]">Dodatkowe opcje</Title>
          </div>
          <div class="flex items-stretch justify-center flex-wrap gap-12">
            {options?.map((option) => (
              <Card className="flex-1 max-w-[345px] h-auto">
                <CardContent className="items-center justify-between h-full text-center gap-4">
                  <CardTitle className="text-[32px] font-bold">
                    {option.title}
                  </CardTitle>
                  <CardDescription>{option.description}</CardDescription>
                  <CardTitle className="text-[32px] font-bold">
                    {option.price}
                  </CardTitle>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      ) : null
    }
  </div>
</price-list>

<script>
  import gsap from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  import { isMobileOrReducedMotion, turnVisible } from "@/lib/utils.ts";

  class PriceList extends HTMLElement {
    constructor() {
      super();

      gsap.registerPlugin(ScrollTrigger);

      const tableRows = this.querySelectorAll("tr");

      tableRows.forEach((row, i) => {
        if (i > 0) {
          const cells = Array.from(row.cells);

          cells.forEach((cell, i) => {
            if (i > 0) {
              cell.dataset.label = tableRows[0].cells[i].innerText;

              if (cell.innerText.toLowerCase() == "tak") {
                cell.innerText = "✔️";
              } else if (cell.innerText.toLowerCase() == "nie") {
                cell.innerText = "❌";
              }
            }
          });
        }
      });

      if (!isMobileOrReducedMotion()) {
        const priceList = this.querySelector(".priceList");
        const additionalOptions = this.querySelector(".additionalOptions");

        let tl = gsap.timeline({
          scrollTrigger: {
            trigger: this,
            start: "top center",
            end: "top center",
          },
        });

        tl.from(priceList, { y: "20%", autoAlpha: 0 })
          .to(priceList, {
            y: 0,
            duration: 0.1,
            ease: "power4.in",
          })
          .from(additionalOptions, { y: "20%", autoAlpha: 0 })
          .to(additionalOptions, {
            y: 0,
            duration: 0.1,
            ease: "power4.in",
          });
      } else {
        turnVisible(this);
      }
    }
  }

  customElements.define("price-list", PriceList);
</script>
