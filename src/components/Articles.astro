---
import type { ArticleData, CategoryData } from '@/interfaces/article.interface'
import fetchApi from '@/lib/strapi';
import Title from './Title.astro';
import Description from './Description.astro';
import { Input } from './ui/input';
import { Button } from './ui/button';
import { Label } from './ui/label';
import AtriclesCards from './ArticlesCards'

const articles = await fetchApi<ArticleData[]>({
    endpoint: 'articles',
    wrappedByKey: 'data',
    query: "populate=*"
})

const categories = await fetchApi<CategoryData[]>({
    endpoint: 'categories',
    wrappedByKey: 'data'
})

categories.push( {
    id: 0,
    attributes:  {
        name: "Wszystko",
        createdAt:   new Date(),
        updatedAt:   new Date(),
        publishedAt: new Date()
        }
    }
)

interface Props {
    title: string;
    description: string;
}

const { title, description } = Astro.props;
---
<div class="flex flex-col items-start justify-center pb-14">
    <div class="flex flex-col lg:flex-row items-start justify-between gap-6">
        <div class="flex flex-col items-start justify-center gap-4 w-full lg:w-1/2">
           <Title>{title}</Title>
           <Description>{description}</Description> 
        </div>
        <div class="w-full lg:w-1/2 flex items-center justify-end">
            <div class="bg-secondary rounded-xl p-8 w-full lg:w-3/4">
                <form >
                    <div class="grid w-full items-center gap-3">
                    <Label htmlFor="searchTitle">Szukaj artykułu</Label>
                        <div class="flex items-center justify-between gap-2">
                            <Input id='searchTitle' placeholder="Tytuł artykułu..." />
                            <Button>Szukaj</Button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <!-- <div class="flex flex-wrap items-center justify-start gap-6 pt-14">
        <Button>Wszystko</Button>
        {
            categories.map((category, i) => (
                <Button variant="secondary">{category.attributes.name}</Button>
            ))
        }
    </div> -->
</div>
<!--
    {
        articles.map((article, i) => (
            <a href={"/blog/" + titleToSlug(article.attributes.title)} class="group">
                <Card key={article.id} id={"card" + (i+1)} className="p-6 lg:p-8 border-none shadow-none bg-secondary h-full">
                    <CardContent className="flex flex-col justify-beetwen items-start p-0 gap-5 md:gap-6">
                        <Image class="w-full rounded-lg max-h-[302px]" src={import.meta.env.STRAPI_URL + article.attributes.image.data.attributes.url} alt="" width={article.attributes.image.data.attributes.width} height={article.attributes.image.data.attributes.height} loading="eager" />
                        <CardTitle className="font-semibold text-lg sm:text-2xl">{article.attributes.title}</CardTitle>
                    </CardContent>
                </Card>
            </a>
        ))
    } -->
<AtriclesCards articles={articles} categories={categories.sort((a, b) => a.id - b.id )} client:load />