---
import type { ArticleData, CategoryData } from "@/interfaces/article.interface";
import fetchApi from "@/lib/strapi";
import QueryString from "qs";
import AtriclesCards from "./ArticlesCards";
import Description from "./Description.astro";
import Title from "./Title.astro";

const projects = await fetchApi<ArticleData[]>({
  endpoint: "projects",
  wrappedByKey: "data",
  query: QueryString.stringify({ populate: { image: true, category: true } }),
});

const categories = await fetchApi<CategoryData[]>({
  endpoint: "types",
  wrappedByKey: "data",
});

interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;
---

<div class="flex flex-col items-start justify-center pb-14">
  <div class="flex flex-col items-start justify-between gap-6 lg:flex-row">
    <div class="flex w-full flex-col items-start justify-center gap-4 lg:w-1/2">
      <Title>{title}</Title>
      <Description>{description}</Description>
    </div>
    <div class="flex w-full items-center justify-end lg:w-1/2"></div>
  </div>
</div>
<AtriclesCards
  articles={projects}
  categories={categories.sort((a, b) => a.id - b.id)}
  portfolio
  client:load
/>
