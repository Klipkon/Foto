---
import { Button } from "@/components/ui/button.tsx";
import DOMPurify from "isomorphic-dompurify";
import type {
  Button as IButton,
  Image as IImage,
  Video,
} from "../interfaces/page";
import Title from "./Title.astro";

interface Props {
  image: IImage;
  description: string;
  title: string;
  buttons: IButton[];
  video: Video;
}

const { video, buttons, title } = Astro.props;
---

<hero-section>
  <div
    class="flex flex-col items-center justify-center gap-10 py-5"
    style="min-height: calc(100dvh - 80px);"
  >
    <Title
      h1
      className="alphanone flex max-w-[426px] flex-col items-center justify-center text-center text-[32px] font-bold lg:text-[40px] lg:leading-[3rem]"
      set:html={DOMPurify.sanitize(title)}
    />
    <div
      class="buttons alphanone flex flex-col items-center justify-center gap-4 sm:flex-row sm:gap-8"
    >
      {
        buttons.map((button) => (
          <a href={button.href}>
            <Button key={button.id} size={button.size} variant={button.variant}>
              {button.content}
            </Button>
          </a>
        ))
      }
    </div>
    <div class="rounded-md sm:rounded-xl">
      <video
        class="alphanone aspect-video h-auto w-full max-w-[1130px] rounded-md shadow-accent sm:rounded-xl"
        autoplay
        muted
        loop
        src={import.meta.env.STRAPI_URL + video.data.attributes.url}></video>
    </div>
  </div>
</hero-section>

<script>
  import { isMobileOrReducedMotion, turnVisible } from "@/lib/utils.ts";
  import gsap from "gsap";

  class HeroSection extends HTMLElement {
    constructor() {
      super();

      const video = this.querySelector("video");
      const title = this.querySelector("h1");
      const buttonContainer = this.querySelector(".buttons");

      if (!isMobileOrReducedMotion()) {
        let tl = gsap.timeline();

        tl.from(buttonContainer, { y: 50, autoAlpha: 0 }, 0.2)
          .to(buttonContainer, {
            y: 0,
            duration: 2,
            ease: "power4.in",
          })
          .from(title, { autoAlpha: 0 }, 0.9)
          .to(title, {
            duration: 0.1,
            ease: "power4.in",
          })
          .from(video, { autoAlpha: 0 }, 0.7)
          .to(video, {
            duration: 0.1,
            ease: "power4.in",
          });
      } else {
        turnVisible(this);
      }
    }
  }

  customElements.define("hero-section", HeroSection);
</script>
