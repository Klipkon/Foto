---
import PortfolioModal from "@/components/PortfolioModal";
import Title from "@/components/Title.astro";
import { CardContent } from "@/components/ui/card";
import type { ArticleData } from "@/interfaces/article.interface";
import type { Button as IButton, Images } from "@/interfaces/page";
import fetchApi from "@/lib/strapi";
import QueryString from "qs";
import Description from "./Description.astro";
import { Button } from "./ui/button";

const projects = await fetchApi<ArticleData[]>({
  endpoint: "projects",
  wrappedByKey: "data",
  query: QueryString.stringify({
    populate: { category: true, thumbnail: true, images: true },
    pagination: {
      limit: 2,
    },
    sort: ["createdAt:desc"],
  }),
});

interface Props {
  title: string;
  description: string;
  images: Images;
  button: IButton;
}

const { title, description, button } = Astro.props;
---

<portfolio-section>
  <div
    id="portfolioSection"
    class="alphanone rounded-xl border-1 border-black p-7 md:p-12 lg:px-12"
  >
    <CardContent>
      <div class="flex items-center justify-center gap-12 lg:justify-between">
        <Title className="portfolioTitle alphanone text-[32px] lg:text-[40px]"
          >{title}</Title
        >
        <Description className="portfolioDesc alphanone hidden w-full lg:flex"
          >{description}</Description
        >
      </div>
      <PortfolioModal data={projects} twoColumn={true} client:only="react" />
      <div class="flex items-center justify-center">
        <a href={button.href}>
          <Button
            id="portfolioButton"
            className="alphanone"
            variant={button.variant}
            size={button.size}>{button.content}</Button
          >
        </a>
      </div>
    </CardContent>
  </div>
</portfolio-section>

<script>
  import { isMobileOrReducedMotion, turnVisible } from "@/lib/utils.ts";
  import gsap from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  class PortfolioSection extends HTMLElement {
    constructor() {
      super();

      gsap.registerPlugin(ScrollTrigger);

      if (!isMobileOrReducedMotion()) {
        const portfolioSection = this.querySelector("#portfolioSection");
        const portfolioTitle = this.querySelector(".portfolioTitle");
        const portfolioDesc = this.querySelector(".portfolioDesc");
        const portfolioCards = this.querySelector("#portfolioCards");
        const portfolioButton = this.querySelector("#portfolioButton");

        let tl = gsap.timeline({
          scrollTrigger: {
            trigger: this,
            start: "top center+=25%",
            end: "top center",
          },
        });

        tl.from(portfolioSection, { y: "20%", autoAlpha: 0 })
          .to(portfolioSection, {
            y: 0,
            duration: 0.1,
            ease: "power4.in",
          })
          .from(portfolioTitle, { y: "20%", autoAlpha: 0 }, 0.2)
          .to(portfolioTitle, {
            y: 0,
            duration: 0.1,
            ease: "power4.in",
          })
          .from(portfolioDesc, { y: "20%", autoAlpha: 0 }, 0.3)
          .to(portfolioDesc, {
            y: 0,
            duration: 0.1,
            ease: "power4.in",
          })
          .from(portfolioCards, { y: "20%", autoAlpha: 0 }, 0.5)
          .to(portfolioCards, {
            y: 0,
            duration: 0.1,
            ease: "power4.in",
          })
          .from(portfolioButton, { y: "20%", autoAlpha: 0 }, 0.8)
          .to(portfolioButton, {
            y: 0,
            duration: 0.1,
            ease: "power4.in",
          });
      } else {
        turnVisible(this);
      }
    }
  }

  customElements.define("portfolio-section", PortfolioSection);
</script>
