---
import Pagination from "@/components/Pagination.astro";
import PortfolioModal from "@/components/PortfolioModal";
import TitleWithDescription from "@/components/TitleWithDescription.astro";
import { Button } from "@/components/ui/button";
import type { ArticleData, CategoryData } from "@/interfaces/article.interface";
import type { Page } from "@/interfaces/page";
import MainLayout from "@/layouts/MainLayout.astro";
import fetchApi from "@/lib/strapi";
import { titleToSlug } from "@/lib/utils";
import "@/styles/globals.css";
import QueryString from "qs";

const portfolioPage = await fetchApi<Page[]>({
  endpoint: "pages",
  wrappedByKey: "data",
  query: QueryString.stringify({
    filters: {
      slug: {
        $eq: "/portfolio",
      },
    },
    populate: {
      seo: true,
      components: {
        populate: {
          articles: true,
        },
      },
    },
  }),
});

const types = await fetchApi<CategoryData[]>({
  endpoint: "types",
  wrappedByKey: "data",
});

interface Props {
  articles: ArticleData[];
  previousUrl?: string;
  nextUrl?: string;
  currentPage: number;
}

const { articles, previousUrl, nextUrl, currentPage } = Astro.props;
const title = portfolioPage[0].attributes.components[0].title!;
const description = portfolioPage[0].attributes.components[0].description!;

const typeUrl = () => {
  const params = Astro.params;
  return "type" in params ? params.type : "";
};

console.log(articles);
---

<MainLayout seo={portfolioPage[0].attributes.seo}>
  <div class="flex flex-col items-start justify-center pb-14">
    <div class="flex flex-col items-start justify-between gap-6 lg:flex-row">
      <TitleWithDescription title={title} description={description} />
      <div class="flex w-full items-center justify-end lg:w-1/2"></div>
    </div>
  </div>
  <div class="flex flex-wrap items-center justify-start gap-5">
    {
      types.map((type) => {
        const slug =
          type.attributes.name == "Wszystko"
            ? ""
            : titleToSlug(type.attributes.name);

        return (
          <a href={"/portfolio/" + slug}>
            <Button
              size="sm"
              variant={slug == typeUrl() ? "default" : "secondary"}
            >
              {type.attributes.name}
            </Button>
          </a>
        );
      })
    }
  </div>
  <PortfolioModal data={articles} client:only="react" />
  <Pagination previous={previousUrl} next={nextUrl} currentPage={currentPage} />
</MainLayout>
