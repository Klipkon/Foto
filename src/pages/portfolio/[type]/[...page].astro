---
import type { ArticleData, CategoryData } from "@/interfaces/article.interface";
import Portfolio from "@/layouts/Portfolio.astro";
import fetchApi from "@/lib/strapi";
import { filterArticles, titleToSlug } from "@/lib/utils";
import "@/styles/globals.css";
import type { GetStaticPathsOptions } from "astro";
import QueryString from "qs";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const types = await fetchApi<CategoryData[]>({
    endpoint: "types",
    wrappedByKey: "data",
  });

  const projects = await fetchApi<ArticleData[]>({
    endpoint: "projects",
    wrappedByKey: "data",
    query: QueryString.stringify({
      populate: {
        categories: true,
        thumbnail: true,
        images: true,
      },
      pagination: {
        limit: 100,
      },
    }),
  });

  return types.flatMap((type) => {
    const typeName = type.attributes.name;
    const typeNameSlug = titleToSlug(typeName).toString();
    const filteredProjects = filterArticles(projects, typeName);

    return paginate(filteredProjects, {
      params: { type: typeNameSlug },
      pageSize: 9,
    });
  });
}

const { page } = Astro.props;
---

<Portfolio
  previousUrl={page.url.prev}
  nextUrl={page.url.next}
  currentPage={page.currentPage}
  articles={page.data}
/>
